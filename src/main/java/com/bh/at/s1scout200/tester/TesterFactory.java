/****************************************************************************************************************
 * BH Confidential                                                                                              *
 * Unpublished Copyright 2021.  Baker Hughes Company                                                            *
 *                                                                                                              *
 * NOTICE:  All information contained herein is, and remains the property of  Baker Hughes Company,  and/or its *
 * affiliates. The intellectual and technical concepts contained herein are proprietary to Baker Hughes Company *
 * and/or its affiliates and may be covered by  patents,  copyrights,  and/or trade secrets.   Dissemination of *
 * this information or reproduction of this material is  strictly forbidden unless prior  written permission is *
 * obtained from Baker Hughes Company.                                                                          *
 ***************************************************************************************************************/

   /* ** AUTOGENERATED - DO NOT MODIFY, ANY MODIFICATIONS WILL BE OVERWRITTEN!!!!! ** */

package com.bh.at.s1scout200.tester;

import com.bh.at.s1scout200.runner.AppConfig;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TesterFactory {
  private static final Logger LOG = LoggerFactory.getLogger(TesterFactory.class);

  @SuppressWarnings("unchecked")
  public static <T> T getTester(String featureName) {
    ITester retVal = null;
    if (AppConfig.testers.containsKey(featureName)) {
      retVal = AppConfig.testers.get(featureName);
    } else {
      retVal = getTesterHelper(featureName);
      AppConfig.testers.put(featureName, retVal);
    }

    return (T)retVal;
  }

  private static ITester getTesterHelper(String featureName) {
    ITester retVal = null;
    switch(featureName) {

      case "AutoRecording":
      retVal = new AutoRecordingTester();
      break;

      case "SensorConfig":
      retVal = new SensorConfigTester();
      break;

      case "VerifyPlots":
      retVal = new VerifyPlotsTester();
      break;

      default:
        LOG.error("Could not find tester {}", featureName);
        break;
      }

      return retVal;
    }
  }
