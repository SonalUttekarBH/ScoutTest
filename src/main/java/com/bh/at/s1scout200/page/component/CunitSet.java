/****************************************************************************************************************
 * BH Confidential                                                                                              *
 * Unpublished Copyright 2021.  Baker Hughes Company                                                            *
 *                                                                                                              *
 * NOTICE:  All information contained herein is, and remains the property of  Baker Hughes Company,  and/or its *
 * affiliates. The intellectual and technical concepts contained herein are proprietary to Baker Hughes Company *
 * and/or its affiliates and may be covered by  patents,  copyrights,  and/or trade secrets.   Dissemination of *
 * this information or reproduction of this material is  strictly forbidden unless prior  written permission is *
 * obtained from Baker Hughes Company.                                                                          *
 ***************************************************************************************************************/

   /* ** AUTOGENERATED - DO NOT MODIFY, ANY MODIFICATIONS WILL BE OVERWRITTEN!!!!! ** */

package com.bh.at.s1scout200.page.component;

import static com.bh.at.uiutils.UIUtilsFactory.uif;
import static com.bh.commonbaseutils.CommonBaseFactory.cbf;

import com.bh.at.iuiutils.IConfig;
import com.bh.at.iuiutils.IText;
import com.bh.at.s1scout200.tester.UiHelper;
import com.bh.at.uiutils.CElement;
import com.bh.icommonbaseutils.IJSONO;

public class CunitSet extends CElement {
  private static final IJSONO sIunitConfig = cbf.getJSONOFromString("{\"loc\":[\"xpath\",\"//*[@test-tag='settingsunitset_S.I._listitem']\",\"webview\"],\"name\":\"S.Iunit\"}");

  private static final IJSONO uSunitConfig = cbf.getJSONOFromString("{\"loc\":[\"xpath\",\"//*[@test-tag='settingsunitset_U.S._listitem']\",\"webview\"],\"name\":\"U.Sunit\"}");

  public IText sIunit;

  public IText uSunit;

  public CunitSet(IConfig config) {
    super(config);
  }

  @Override
  public CunitSet initComponents(int... optTimeoutInSecs) {
    super.initComponents(optTimeoutInSecs);
    sIunit.init(optTimeoutInSecs);
    uSunit.init(optTimeoutInSecs);

    return this;
  }

  @Override
  public CunitSet collectData() {
    if (elementExists()) {
      super.collectData();
      sIunit.collectData();
      uSunit.collectData();
    }

    return this;
  }

  @Override
  protected CunitSet createComponents() {
    super.createComponents();
    sIunit = uif.getText(UiHelper.config.createConfig(sIunitConfig, this));
    uSunit = uif.getText(UiHelper.config.createConfig(uSunitConfig, this));

    return this;
  }
}
